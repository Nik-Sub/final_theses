status = error
dest = err
name = PropertiesConfig

property.logDir = logs

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %style{%d{ISO8601}}{magenta} %highlight{%p} [%style{%t}{blue}] %style{%c{1}}{yellow}: %m%n%throwable

appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${logDir}/dispatcher.log
appender.rolling.filePattern = ${logDir}/dispatcher-%d{MM-dd-yy}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{ISO8601} %p [%t] %c{1}: %m%n%throwable
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 256MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.action.type = Delete
appender.rolling.strategy.action.basePath = ${logDir}
appender.rolling.strategy.action.maxDepth = 1
# Delete files older than 90 days.
appender.rolling.strategy.action.ageCondition.type = IfLastModified
appender.rolling.strategy.action.ageCondition.age = 90D
# With filenames matching the glob expression "*.log.gz".
appender.rolling.strategy.action.pathCondition.type = IfFileName
appender.rolling.strategy.action.pathCondition.glob = *.log.gz

appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = ${env:LOG_LEVEL:-info}

logger.console.name = STDOUT
logger.console.level = ${env:LOG_LEVEL:-info}
logger.console.appenderRef.console.ref = STDOUT

logger.rolling.name = RollingFile
logger.rolling.level = debug
logger.rolling.appenderRef.rolling.ref = RollingFile

rootLogger.level = debug
rootLogger.appenderRef.console.ref = STDOUT
rootLogger.appenderRef.rolling.ref = RollingFile
